apiVersion: v1
kind: Pod
metadata:
  name: cpu-monitor
  labels:
    app: cpu-monitor
spec:
  containers:
  - name: cpu-monitor
    image: nginx:latest
    command: ["/bin/sh", "-c"]
    args:
      - |
        # Start nginx in background
        nginx &
        
        # Install monitoring tools and stress tool
        apt-get update && apt-get install -y procps stress bc htop
        
        # Start CPU stress in background
        stress --cpu 2 --timeout 300s &
        STRESS_PID=$!
        echo "Started CPU stress test with PID: $STRESS_PID"
        
        # Monitor CPU usage while stress is running
        while true; do
          # Get CPU usage specifically for the container
          CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}')
          
          echo "Current CPU Usage: ${CPU_USAGE}%"
          echo "Originally Configured CPU Limit: ${CPU_LIMIT}m"
          echo "Originally Configured CPU Request: ${CPU_REQUEST}m"
          echo "Stress test running: $(ps -p $STRESS_PID > /dev/null && echo 'YES' || echo 'NO')"
          echo "------------------------"
          
          # If stress test ended, start a new one
          if ! ps -p $STRESS_PID > /dev/null; then
            echo "Restarting stress test..."
            stress --cpu 2 --timeout 300s &
            STRESS_PID=$!
          fi
          
          sleep 5
        done
    ports:
    - containerPort: 80
    env:
    - name: CPU_LIMIT
      valueFrom:
        resourceFieldRef:
          containerName: cpu-monitor
          resource: limits.cpu
          divisor: 1m
    - name: CPU_REQUEST
      valueFrom:
        resourceFieldRef:
          containerName: cpu-monitor
          resource: requests.cpu
          divisor: 1m
    resizePolicy:
    - resourceName: cpu
      restartPolicy: NotRequired
    - resourceName: memory
      restartPolicy: RestartContainer              
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

